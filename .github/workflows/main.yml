name: CI
on:

  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: postgres  # Assuming default postgres user
          POSTGRES_DB: postgres  # Assuming default postgres database
        ports: ['5432:5432']
    
    env:
      PG_DATABASE: ""  # Set to empty string
      PG_HOST: ""  # Set to empty string
      PG_USER: ""  # Set to empty string (connection string will override)
      PG_PASSWORD: ""  # Set to empty string (connection string will override)
      POSTGRES_TEST_URI: postgres://postgres:${{ secrets.DB_PASSWORD }}@postgres:5432/postgres
      RAILS_ENV: test
      WITH_COVERAGE: true
      DISABLE_SPRING: 1


    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install Dependencies
        run: |
          sudo apt install -yqq libpq-dev
          gem install bundler

      - name: Install Gems 
        run: |
          bundle install

      - name: Setup database
        env:
          PG_DATABASE: GemPoc_test
          PG_HOST: localhost
          PG_USER: ${{ secrets.DB_USER }}
          PG_PASSWORD: ${{ secrets.DB_PASSWORD }}
          RAILS_ENV: test
          WITH_COVERAGE: true
          DISABLE_SPRING: 1
        run: |
          bundle exec rails db:prepare --database=$POSTGRES_TEST_URI
          bundle exec rake test

      - name: Build and test with rspec
        env:
          PG_DATABASE: GemPoc_test
          PG_HOST: localhost
          PG_USER: ${{ secrets.DB_USER }}
          PG_PASSWORD: ${{ secrets.DB_PASSWORD }}
          RAILS_ENV: test
        run: |
          bundle exec rspec spec
